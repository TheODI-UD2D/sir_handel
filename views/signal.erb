<form class='form-inline' action='/signals/<%= @signal %>' method='post'>
  <div class='form-group'>
    <label for='from'>From</label>
    <div class='input-group date' id='from-date'>
      <input type='text' class="form-control" id='from' name='from' value='<%= @from %>'/>
      <span class="input-group-addon">
          <span class="glyphicon glyphicon-calendar"></span>
      </span>
    </div>
  </div>
  <div class='form-group'>
    <label for='from'>To</label>
    <div class='input-group date' id='to-date'>
      <input type='text' class="form-control" id='to' name='to' value='<%= @to %>'/>
      <span class="input-group-addon">
          <span class="glyphicon glyphicon-calendar"></span>
      </span>
    </div>
  </div>
  <div class='form-group'>
    <label for='interval'>Interval</label>
    <select name='interval' id='interval' class='form-control'>
      <%
        {
          "1 second" => "1s",
          "5 seconds" => "5s",
          "10 seconds" => "10s",
          "30 seconds" => "30s",
          "1 minute" => "1m",
          "5 minutes" => "5m",
          "10 minutes" => "10m",
          "30 minutes" => "30m",
          "1 hour" => "1h",
          "1 day" => "1d"
        }.each do |label, interval|
      %>
      <option <% if @interval == interval %>selected='selected' <% end %> value='<%= interval %>'><%= label %></option>
      <% end %>
    </select>
  </div>
  <div class='form-group'>
    <button type='submit' class='btn btn-primary'>Submit</button>
  </div>
</form>

<div id='chart' style="height:600px; width: 100%;">
  <p><i class="fa fa-spinner fa-spin"></i></p>
</div>

<script>

function myGraph(json) {

  var timeFormat = d3.time.format('%Y-%m-%dT%H:%M:%S+00:00');

  var data = {
      x: [],
      y: [],
      type: 'scatter'
  };

  var layout = {
    xaxis: {
      tickangle: 75,
      exponentformat: 'e',
      type: 'datetime',
      tickfont: {
        family: 'RailwayRegular'
      }
    },
    yaxis: {
      tickfont: {
        family: 'RailwayRegular'
      }
    }
  }

  json.results.forEach(function(r) {
    data.x.push(timeFormat.parse(r.timestamp))
    data.y.push(r.value)
  })

  Plotly.newPlot('chart', [data], layout);

  d3.selectAll("#chart p").classed("hidden", true);
}

d3.json(document.URL, function(error, json) {
  d3.selectAll("#chart p").classed("hidden", false);
  if (error) {
    json = JSON.parse(error.responseText)
    alert(json.status);
    d3.selectAll("#chart p").classed("hidden", true);
  } else {
    myGraph(json);
  }
});

$(function () {
  d3.json('http://sir_handel.dev/cromulent-dates', function(error, json) {
    var format = 'YYYY-MM-DD HH:mm:ss'

    $('#from-date').datetimepicker({
      format: format,
      minDate: json.start,
      maxDate: json.end
    });

    $('#to-date').datetimepicker({
      format: format,
      useCurrent: false,
      minDate: json.start,
      maxDate: json.end
    });

    $("#from-date").on("dp.change", function (e) {
        $('#to-date').data("DateTimePicker").minDate(e.date);
    });
    $("#to-date").on("dp.change", function (e) {
        $('#from-date').data("DateTimePicker").maxDate(e.date);
    });
  });
});

</script>
